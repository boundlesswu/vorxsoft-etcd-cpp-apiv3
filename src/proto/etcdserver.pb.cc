// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: etcdserver.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/etcdserver.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace etcdserverpb {

namespace {

const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Metadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Metadata_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_etcdserver_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_etcdserver_2eproto() {
  protobuf_AddDesc_etcdserver_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "etcdserver.proto");
  GOOGLE_CHECK(file != NULL);
  Request_descriptor_ = file->message_type(0);
  static const int Request_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, prevvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, previndex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, prevexist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, expiration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, wait_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, since_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, recursive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, sorted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, quorum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, stream_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, refresh_),
  };
  Request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_descriptor_,
      Request::default_instance_,
      Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_[0]),
      -1,
      -1,
      sizeof(Request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_),
      -1);
  Metadata_descriptor_ = file->message_type(1);
  static const int Metadata_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, clusterid_),
  };
  Metadata_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Metadata_descriptor_,
      Metadata::default_instance_,
      Metadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, _has_bits_[0]),
      -1,
      -1,
      sizeof(Metadata),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_etcdserver_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_descriptor_, &Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Metadata_descriptor_, &Metadata::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_etcdserver_2eproto() {
  delete Request::default_instance_;
  delete Request_reflection_;
  delete Metadata::default_instance_;
  delete Metadata_reflection_;
}

void protobuf_AddDesc_etcdserver_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_etcdserver_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020etcdserver.proto\022\014etcdserverpb\"\231\002\n\007Req"
    "uest\022\n\n\002ID\030\001 \001(\004\022\016\n\006Method\030\002 \001(\t\022\014\n\004Path"
    "\030\003 \001(\t\022\013\n\003Val\030\004 \001(\t\022\013\n\003Dir\030\005 \001(\010\022\021\n\tPrev"
    "Value\030\006 \001(\t\022\021\n\tPrevIndex\030\007 \001(\004\022\021\n\tPrevEx"
    "ist\030\010 \001(\010\022\022\n\nExpiration\030\t \001(\003\022\014\n\004Wait\030\n "
    "\001(\010\022\r\n\005Since\030\013 \001(\004\022\021\n\tRecursive\030\014 \001(\010\022\016\n"
    "\006Sorted\030\r \001(\010\022\016\n\006Quorum\030\016 \001(\010\022\014\n\004Time\030\017 "
    "\001(\003\022\016\n\006Stream\030\020 \001(\010\022\017\n\007Refresh\030\021 \001(\010\"-\n\010"
    "Metadata\022\016\n\006NodeID\030\001 \001(\004\022\021\n\tClusterID\030\002 "
    "\001(\004", 363);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "etcdserver.proto", &protobuf_RegisterTypes);
  Request::default_instance_ = new Request();
  Metadata::default_instance_ = new Metadata();
  Request::default_instance_->InitAsDefaultInstance();
  Metadata::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_etcdserver_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_etcdserver_2eproto {
  StaticDescriptorInitializer_etcdserver_2eproto() {
    protobuf_AddDesc_etcdserver_2eproto();
  }
} static_descriptor_initializer_etcdserver_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kIDFieldNumber;
const int Request::kMethodFieldNumber;
const int Request::kPathFieldNumber;
const int Request::kValFieldNumber;
const int Request::kDirFieldNumber;
const int Request::kPrevValueFieldNumber;
const int Request::kPrevIndexFieldNumber;
const int Request::kPrevExistFieldNumber;
const int Request::kExpirationFieldNumber;
const int Request::kWaitFieldNumber;
const int Request::kSinceFieldNumber;
const int Request::kRecursiveFieldNumber;
const int Request::kSortedFieldNumber;
const int Request::kQuorumFieldNumber;
const int Request::kTimeFieldNumber;
const int Request::kStreamFieldNumber;
const int Request::kRefreshFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.Request)
}

void Request::InitAsDefaultInstance() {
}

Request::Request(const Request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.Request)
}

void Request::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_ = false;
  prevvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  previndex_ = GOOGLE_ULONGLONG(0);
  prevexist_ = false;
  expiration_ = GOOGLE_LONGLONG(0);
  wait_ = false;
  since_ = GOOGLE_ULONGLONG(0);
  recursive_ = false;
  sorted_ = false;
  quorum_ = false;
  time_ = GOOGLE_LONGLONG(0);
  stream_ = false;
  refresh_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:etcdserverpb.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prevvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_etcdserver_2eproto();
  return *default_instance_;
}

Request* Request::default_instance_ = NULL;

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.Request)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Request, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Request*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(dir_, prevexist_);
    id_ = GOOGLE_ULONGLONG(0);
    if (has_method()) {
      method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_path()) {
      path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_val()) {
      val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_prevvalue()) {
      prevvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    previndex_ = GOOGLE_ULONGLONG(0);
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(expiration_, since_);
    ZR_(wait_, stream_);
    time_ = GOOGLE_LONGLONG(0);
  }
  refresh_ = false;

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 ID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Method;
        break;
      }

      // optional string Method = 2;
      case 2: {
        if (tag == 18) {
         parse_Method:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "etcdserverpb.Request.Method");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Path;
        break;
      }

      // optional string Path = 3;
      case 3: {
        if (tag == 26) {
         parse_Path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "etcdserverpb.Request.Path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Val;
        break;
      }

      // optional string Val = 4;
      case 4: {
        if (tag == 34) {
         parse_Val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_val()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->val().data(), this->val().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "etcdserverpb.Request.Val");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Dir;
        break;
      }

      // optional bool Dir = 5;
      case 5: {
        if (tag == 40) {
         parse_Dir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dir_)));
          set_has_dir();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_PrevValue;
        break;
      }

      // optional string PrevValue = 6;
      case 6: {
        if (tag == 50) {
         parse_PrevValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prevvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->prevvalue().data(), this->prevvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "etcdserverpb.Request.PrevValue");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_PrevIndex;
        break;
      }

      // optional uint64 PrevIndex = 7;
      case 7: {
        if (tag == 56) {
         parse_PrevIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &previndex_)));
          set_has_previndex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_PrevExist;
        break;
      }

      // optional bool PrevExist = 8;
      case 8: {
        if (tag == 64) {
         parse_PrevExist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &prevexist_)));
          set_has_prevexist();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_Expiration;
        break;
      }

      // optional int64 Expiration = 9;
      case 9: {
        if (tag == 72) {
         parse_Expiration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expiration_)));
          set_has_expiration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_Wait;
        break;
      }

      // optional bool Wait = 10;
      case 10: {
        if (tag == 80) {
         parse_Wait:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wait_)));
          set_has_wait();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_Since;
        break;
      }

      // optional uint64 Since = 11;
      case 11: {
        if (tag == 88) {
         parse_Since:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &since_)));
          set_has_since();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_Recursive;
        break;
      }

      // optional bool Recursive = 12;
      case 12: {
        if (tag == 96) {
         parse_Recursive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &recursive_)));
          set_has_recursive();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_Sorted;
        break;
      }

      // optional bool Sorted = 13;
      case 13: {
        if (tag == 104) {
         parse_Sorted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sorted_)));
          set_has_sorted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_Quorum;
        break;
      }

      // optional bool Quorum = 14;
      case 14: {
        if (tag == 112) {
         parse_Quorum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &quorum_)));
          set_has_quorum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_Time;
        break;
      }

      // optional int64 Time = 15;
      case 15: {
        if (tag == 120) {
         parse_Time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_Stream;
        break;
      }

      // optional bool Stream = 16;
      case 16: {
        if (tag == 128) {
         parse_Stream:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stream_)));
          set_has_stream();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_Refresh;
        break;
      }

      // optional bool Refresh = 17;
      case 17: {
        if (tag == 136) {
         parse_Refresh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &refresh_)));
          set_has_refresh();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.Request)
  // optional uint64 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional string Method = 2;
  if (has_method()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.Method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method(), output);
  }

  // optional string Path = 3;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.Path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  // optional string Val = 4;
  if (has_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val().data(), this->val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.Val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->val(), output);
  }

  // optional bool Dir = 5;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->dir(), output);
  }

  // optional string PrevValue = 6;
  if (has_prevvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prevvalue().data(), this->prevvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.PrevValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->prevvalue(), output);
  }

  // optional uint64 PrevIndex = 7;
  if (has_previndex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->previndex(), output);
  }

  // optional bool PrevExist = 8;
  if (has_prevexist()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->prevexist(), output);
  }

  // optional int64 Expiration = 9;
  if (has_expiration()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->expiration(), output);
  }

  // optional bool Wait = 10;
  if (has_wait()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->wait(), output);
  }

  // optional uint64 Since = 11;
  if (has_since()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->since(), output);
  }

  // optional bool Recursive = 12;
  if (has_recursive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->recursive(), output);
  }

  // optional bool Sorted = 13;
  if (has_sorted()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->sorted(), output);
  }

  // optional bool Quorum = 14;
  if (has_quorum()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->quorum(), output);
  }

  // optional int64 Time = 15;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->time(), output);
  }

  // optional bool Stream = 16;
  if (has_stream()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->stream(), output);
  }

  // optional bool Refresh = 17;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->refresh(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.Request)
  // optional uint64 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional string Method = 2;
  if (has_method()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.Method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method(), target);
  }

  // optional string Path = 3;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.Path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->path(), target);
  }

  // optional string Val = 4;
  if (has_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val().data(), this->val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.Val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->val(), target);
  }

  // optional bool Dir = 5;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->dir(), target);
  }

  // optional string PrevValue = 6;
  if (has_prevvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prevvalue().data(), this->prevvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.PrevValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->prevvalue(), target);
  }

  // optional uint64 PrevIndex = 7;
  if (has_previndex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->previndex(), target);
  }

  // optional bool PrevExist = 8;
  if (has_prevexist()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->prevexist(), target);
  }

  // optional int64 Expiration = 9;
  if (has_expiration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->expiration(), target);
  }

  // optional bool Wait = 10;
  if (has_wait()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->wait(), target);
  }

  // optional uint64 Since = 11;
  if (has_since()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->since(), target);
  }

  // optional bool Recursive = 12;
  if (has_recursive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->recursive(), target);
  }

  // optional bool Sorted = 13;
  if (has_sorted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->sorted(), target);
  }

  // optional bool Quorum = 14;
  if (has_quorum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->quorum(), target);
  }

  // optional int64 Time = 15;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->time(), target);
  }

  // optional bool Stream = 16;
  if (has_stream()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->stream(), target);
  }

  // optional bool Refresh = 17;
  if (has_refresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->refresh(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.Request)
  return target;
}

int Request::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.Request)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint64 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional string Method = 2;
    if (has_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method());
    }

    // optional string Path = 3;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional string Val = 4;
    if (has_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->val());
    }

    // optional bool Dir = 5;
    if (has_dir()) {
      total_size += 1 + 1;
    }

    // optional string PrevValue = 6;
    if (has_prevvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prevvalue());
    }

    // optional uint64 PrevIndex = 7;
    if (has_previndex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->previndex());
    }

    // optional bool PrevExist = 8;
    if (has_prevexist()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int64 Expiration = 9;
    if (has_expiration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->expiration());
    }

    // optional bool Wait = 10;
    if (has_wait()) {
      total_size += 1 + 1;
    }

    // optional uint64 Since = 11;
    if (has_since()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->since());
    }

    // optional bool Recursive = 12;
    if (has_recursive()) {
      total_size += 1 + 1;
    }

    // optional bool Sorted = 13;
    if (has_sorted()) {
      total_size += 1 + 1;
    }

    // optional bool Quorum = 14;
    if (has_quorum()) {
      total_size += 1 + 1;
    }

    // optional int64 Time = 15;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }

    // optional bool Stream = 16;
    if (has_stream()) {
      total_size += 2 + 1;
    }

  }
  // optional bool Refresh = 17;
  if (has_refresh()) {
    total_size += 2 + 1;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.Request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Request* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.Request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_method()) {
      set_has_method();
      method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
    }
    if (from.has_path()) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (from.has_val()) {
      set_has_val();
      val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_);
    }
    if (from.has_dir()) {
      set_dir(from.dir());
    }
    if (from.has_prevvalue()) {
      set_has_prevvalue();
      prevvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prevvalue_);
    }
    if (from.has_previndex()) {
      set_previndex(from.previndex());
    }
    if (from.has_prevexist()) {
      set_prevexist(from.prevexist());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_expiration()) {
      set_expiration(from.expiration());
    }
    if (from.has_wait()) {
      set_wait(from.wait());
    }
    if (from.has_since()) {
      set_since(from.since());
    }
    if (from.has_recursive()) {
      set_recursive(from.recursive());
    }
    if (from.has_sorted()) {
      set_sorted(from.sorted());
    }
    if (from.has_quorum()) {
      set_quorum(from.quorum());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_stream()) {
      set_stream(from.stream());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_refresh()) {
      set_refresh(from.refresh());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {

  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  std::swap(id_, other->id_);
  method_.Swap(&other->method_);
  path_.Swap(&other->path_);
  val_.Swap(&other->val_);
  std::swap(dir_, other->dir_);
  prevvalue_.Swap(&other->prevvalue_);
  std::swap(previndex_, other->previndex_);
  std::swap(prevexist_, other->prevexist_);
  std::swap(expiration_, other->expiration_);
  std::swap(wait_, other->wait_);
  std::swap(since_, other->since_);
  std::swap(recursive_, other->recursive_);
  std::swap(sorted_, other->sorted_);
  std::swap(quorum_, other->quorum_);
  std::swap(time_, other->time_);
  std::swap(stream_, other->stream_);
  std::swap(refresh_, other->refresh_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// optional uint64 ID = 1;
bool Request::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Request::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 Request::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.ID)
  return id_;
}
 void Request::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.ID)
}

// optional string Method = 2;
bool Request::has_method() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request::set_has_method() {
  _has_bits_[0] |= 0x00000002u;
}
void Request::clear_has_method() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method();
}
 const ::std::string& Request::method() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Method)
}
 void Request::set_method(const char* value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.Request.Method)
}
 void Request::set_method(const char* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.Request.Method)
}
 ::std::string* Request::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Request.Method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_method() {
  // @@protoc_insertion_point(field_release:etcdserverpb.Request.Method)
  clear_has_method();
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Request.Method)
}

// optional string Path = 3;
bool Request::has_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request::set_has_path() {
  _has_bits_[0] |= 0x00000004u;
}
void Request::clear_has_path() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
 const ::std::string& Request::path() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Path)
}
 void Request::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.Request.Path)
}
 void Request::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.Request.Path)
}
 ::std::string* Request::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Request.Path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_path() {
  // @@protoc_insertion_point(field_release:etcdserverpb.Request.Path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Request.Path)
}

// optional string Val = 4;
bool Request::has_val() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request::set_has_val() {
  _has_bits_[0] |= 0x00000008u;
}
void Request::clear_has_val() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request::clear_val() {
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_val();
}
 const ::std::string& Request::val() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Val)
  return val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_val(const ::std::string& value) {
  set_has_val();
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Val)
}
 void Request::set_val(const char* value) {
  set_has_val();
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.Request.Val)
}
 void Request::set_val(const char* value, size_t size) {
  set_has_val();
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.Request.Val)
}
 ::std::string* Request::mutable_val() {
  set_has_val();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Request.Val)
  return val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_val() {
  // @@protoc_insertion_point(field_release:etcdserverpb.Request.Val)
  clear_has_val();
  return val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_val(::std::string* val) {
  if (val != NULL) {
    set_has_val();
  } else {
    clear_has_val();
  }
  val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Request.Val)
}

// optional bool Dir = 5;
bool Request::has_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Request::set_has_dir() {
  _has_bits_[0] |= 0x00000010u;
}
void Request::clear_has_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
void Request::clear_dir() {
  dir_ = false;
  clear_has_dir();
}
 bool Request::dir() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Dir)
  return dir_;
}
 void Request::set_dir(bool value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Dir)
}

// optional string PrevValue = 6;
bool Request::has_prevvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Request::set_has_prevvalue() {
  _has_bits_[0] |= 0x00000020u;
}
void Request::clear_has_prevvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
void Request::clear_prevvalue() {
  prevvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_prevvalue();
}
 const ::std::string& Request::prevvalue() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.PrevValue)
  return prevvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_prevvalue(const ::std::string& value) {
  set_has_prevvalue();
  prevvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.PrevValue)
}
 void Request::set_prevvalue(const char* value) {
  set_has_prevvalue();
  prevvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.Request.PrevValue)
}
 void Request::set_prevvalue(const char* value, size_t size) {
  set_has_prevvalue();
  prevvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.Request.PrevValue)
}
 ::std::string* Request::mutable_prevvalue() {
  set_has_prevvalue();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Request.PrevValue)
  return prevvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_prevvalue() {
  // @@protoc_insertion_point(field_release:etcdserverpb.Request.PrevValue)
  clear_has_prevvalue();
  return prevvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_prevvalue(::std::string* prevvalue) {
  if (prevvalue != NULL) {
    set_has_prevvalue();
  } else {
    clear_has_prevvalue();
  }
  prevvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prevvalue);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Request.PrevValue)
}

// optional uint64 PrevIndex = 7;
bool Request::has_previndex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Request::set_has_previndex() {
  _has_bits_[0] |= 0x00000040u;
}
void Request::clear_has_previndex() {
  _has_bits_[0] &= ~0x00000040u;
}
void Request::clear_previndex() {
  previndex_ = GOOGLE_ULONGLONG(0);
  clear_has_previndex();
}
 ::google::protobuf::uint64 Request::previndex() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.PrevIndex)
  return previndex_;
}
 void Request::set_previndex(::google::protobuf::uint64 value) {
  set_has_previndex();
  previndex_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.PrevIndex)
}

// optional bool PrevExist = 8;
bool Request::has_prevexist() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Request::set_has_prevexist() {
  _has_bits_[0] |= 0x00000080u;
}
void Request::clear_has_prevexist() {
  _has_bits_[0] &= ~0x00000080u;
}
void Request::clear_prevexist() {
  prevexist_ = false;
  clear_has_prevexist();
}
 bool Request::prevexist() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.PrevExist)
  return prevexist_;
}
 void Request::set_prevexist(bool value) {
  set_has_prevexist();
  prevexist_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.PrevExist)
}

// optional int64 Expiration = 9;
bool Request::has_expiration() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Request::set_has_expiration() {
  _has_bits_[0] |= 0x00000100u;
}
void Request::clear_has_expiration() {
  _has_bits_[0] &= ~0x00000100u;
}
void Request::clear_expiration() {
  expiration_ = GOOGLE_LONGLONG(0);
  clear_has_expiration();
}
 ::google::protobuf::int64 Request::expiration() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Expiration)
  return expiration_;
}
 void Request::set_expiration(::google::protobuf::int64 value) {
  set_has_expiration();
  expiration_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Expiration)
}

// optional bool Wait = 10;
bool Request::has_wait() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Request::set_has_wait() {
  _has_bits_[0] |= 0x00000200u;
}
void Request::clear_has_wait() {
  _has_bits_[0] &= ~0x00000200u;
}
void Request::clear_wait() {
  wait_ = false;
  clear_has_wait();
}
 bool Request::wait() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Wait)
  return wait_;
}
 void Request::set_wait(bool value) {
  set_has_wait();
  wait_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Wait)
}

// optional uint64 Since = 11;
bool Request::has_since() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Request::set_has_since() {
  _has_bits_[0] |= 0x00000400u;
}
void Request::clear_has_since() {
  _has_bits_[0] &= ~0x00000400u;
}
void Request::clear_since() {
  since_ = GOOGLE_ULONGLONG(0);
  clear_has_since();
}
 ::google::protobuf::uint64 Request::since() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Since)
  return since_;
}
 void Request::set_since(::google::protobuf::uint64 value) {
  set_has_since();
  since_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Since)
}

// optional bool Recursive = 12;
bool Request::has_recursive() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Request::set_has_recursive() {
  _has_bits_[0] |= 0x00000800u;
}
void Request::clear_has_recursive() {
  _has_bits_[0] &= ~0x00000800u;
}
void Request::clear_recursive() {
  recursive_ = false;
  clear_has_recursive();
}
 bool Request::recursive() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Recursive)
  return recursive_;
}
 void Request::set_recursive(bool value) {
  set_has_recursive();
  recursive_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Recursive)
}

// optional bool Sorted = 13;
bool Request::has_sorted() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Request::set_has_sorted() {
  _has_bits_[0] |= 0x00001000u;
}
void Request::clear_has_sorted() {
  _has_bits_[0] &= ~0x00001000u;
}
void Request::clear_sorted() {
  sorted_ = false;
  clear_has_sorted();
}
 bool Request::sorted() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Sorted)
  return sorted_;
}
 void Request::set_sorted(bool value) {
  set_has_sorted();
  sorted_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Sorted)
}

// optional bool Quorum = 14;
bool Request::has_quorum() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Request::set_has_quorum() {
  _has_bits_[0] |= 0x00002000u;
}
void Request::clear_has_quorum() {
  _has_bits_[0] &= ~0x00002000u;
}
void Request::clear_quorum() {
  quorum_ = false;
  clear_has_quorum();
}
 bool Request::quorum() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Quorum)
  return quorum_;
}
 void Request::set_quorum(bool value) {
  set_has_quorum();
  quorum_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Quorum)
}

// optional int64 Time = 15;
bool Request::has_time() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Request::set_has_time() {
  _has_bits_[0] |= 0x00004000u;
}
void Request::clear_has_time() {
  _has_bits_[0] &= ~0x00004000u;
}
void Request::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
 ::google::protobuf::int64 Request::time() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Time)
  return time_;
}
 void Request::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Time)
}

// optional bool Stream = 16;
bool Request::has_stream() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Request::set_has_stream() {
  _has_bits_[0] |= 0x00008000u;
}
void Request::clear_has_stream() {
  _has_bits_[0] &= ~0x00008000u;
}
void Request::clear_stream() {
  stream_ = false;
  clear_has_stream();
}
 bool Request::stream() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Stream)
  return stream_;
}
 void Request::set_stream(bool value) {
  set_has_stream();
  stream_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Stream)
}

// optional bool Refresh = 17;
bool Request::has_refresh() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void Request::set_has_refresh() {
  _has_bits_[0] |= 0x00010000u;
}
void Request::clear_has_refresh() {
  _has_bits_[0] &= ~0x00010000u;
}
void Request::clear_refresh() {
  refresh_ = false;
  clear_has_refresh();
}
 bool Request::refresh() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Refresh)
  return refresh_;
}
 void Request::set_refresh(bool value) {
  set_has_refresh();
  refresh_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Refresh)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metadata::kNodeIDFieldNumber;
const int Metadata::kClusterIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metadata::Metadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.Metadata)
}

void Metadata::InitAsDefaultInstance() {
}

Metadata::Metadata(const Metadata& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.Metadata)
}

void Metadata::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = GOOGLE_ULONGLONG(0);
  clusterid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Metadata::~Metadata() {
  // @@protoc_insertion_point(destructor:etcdserverpb.Metadata)
  SharedDtor();
}

void Metadata::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Metadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Metadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Metadata_descriptor_;
}

const Metadata& Metadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_etcdserver_2eproto();
  return *default_instance_;
}

Metadata* Metadata::default_instance_ = NULL;

Metadata* Metadata::New(::google::protobuf::Arena* arena) const {
  Metadata* n = new Metadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.Metadata)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Metadata, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Metadata*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(nodeid_, clusterid_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Metadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.Metadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 NodeID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ClusterID;
        break;
      }

      // optional uint64 ClusterID = 2;
      case 2: {
        if (tag == 16) {
         parse_ClusterID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clusterid_)));
          set_has_clusterid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.Metadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.Metadata)
  return false;
#undef DO_
}

void Metadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.Metadata)
  // optional uint64 NodeID = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->nodeid(), output);
  }

  // optional uint64 ClusterID = 2;
  if (has_clusterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->clusterid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.Metadata)
}

::google::protobuf::uint8* Metadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.Metadata)
  // optional uint64 NodeID = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->nodeid(), target);
  }

  // optional uint64 ClusterID = 2;
  if (has_clusterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->clusterid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.Metadata)
  return target;
}

int Metadata::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.Metadata)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 NodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->nodeid());
    }

    // optional uint64 ClusterID = 2;
    if (has_clusterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->clusterid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Metadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.Metadata)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Metadata* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Metadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.Metadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.Metadata)
    MergeFrom(*source);
  }
}

void Metadata::MergeFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.Metadata)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_clusterid()) {
      set_clusterid(from.clusterid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Metadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metadata::CopyFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metadata::IsInitialized() const {

  return true;
}

void Metadata::Swap(Metadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metadata::InternalSwap(Metadata* other) {
  std::swap(nodeid_, other->nodeid_);
  std::swap(clusterid_, other->clusterid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Metadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Metadata_descriptor_;
  metadata.reflection = Metadata_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Metadata

// optional uint64 NodeID = 1;
bool Metadata::has_nodeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Metadata::set_has_nodeid() {
  _has_bits_[0] |= 0x00000001u;
}
void Metadata::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Metadata::clear_nodeid() {
  nodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_nodeid();
}
 ::google::protobuf::uint64 Metadata::nodeid() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Metadata.NodeID)
  return nodeid_;
}
 void Metadata::set_nodeid(::google::protobuf::uint64 value) {
  set_has_nodeid();
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Metadata.NodeID)
}

// optional uint64 ClusterID = 2;
bool Metadata::has_clusterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Metadata::set_has_clusterid() {
  _has_bits_[0] |= 0x00000002u;
}
void Metadata::clear_has_clusterid() {
  _has_bits_[0] &= ~0x00000002u;
}
void Metadata::clear_clusterid() {
  clusterid_ = GOOGLE_ULONGLONG(0);
  clear_has_clusterid();
}
 ::google::protobuf::uint64 Metadata::clusterid() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Metadata.ClusterID)
  return clusterid_;
}
 void Metadata::set_clusterid(::google::protobuf::uint64 value) {
  set_has_clusterid();
  clusterid_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Metadata.ClusterID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace etcdserverpb

// @@protoc_insertion_point(global_scope)
